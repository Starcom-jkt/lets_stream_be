<%- include('../../components/header.ejs') %>
<!-- partial -->
<div class="container-fluid page-body-wrapper bg-black">
  <!-- partial:partials/_navbar.html -->
  <%- include('../../components/navbar.ejs') %>
  <!-- partial -->
  <div class="main-panel">
    <div class="content-wrapper">
      <div class="page-header">
        <div class="d-flex align-items-center">
          <h3 class="page-title">Transaction Report for <%= username %></h3>
        </div>
        
        <nav aria-label="breadcrumb">
          <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#">Reports</a></li>
            <li class="breadcrumb-item active" aria-current="page">Transaction Report</li>
          </ol>
        </nav>
      </div>

    

      <div class="row">
        <div class="card">
          <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-4">
              <h4 class="card-title mb-0">Transaction Summary</h4>
                <!-- Filter Bar -->
      <div class="row mb-0">
        <div class="col d-flex justify-content-end">
          <div class="input-group">
            <!-- Start Date Input -->
            <input type="date" id="startDate" name="startDate" class="form-control ml-2">
        
            <!-- End Date Input -->
            <input type="date" id="endDate" name="endDate" class="form-control ml-2">
        
            <!-- Filter Button -->
            <button class="btn btn-primary ml-2" onclick="filterByDate()">Filter</button>
          </div>
        </div>
      </div>
            </div>

            <div class="table-responsive">
              <table class="table table-bordered">
                <thead>
                  <tr>
                    <th>Total Spend</th>
                    <th>Total Income</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td>Rp. <%= parseFloat(totalSpend).toFixed(2) %></td>
                    <td>Rp. <%= parseFloat(totalIncome).toFixed(2) %></td>
                  </tr>
                </tbody>
              </table>
            </div>

            <h4 class="mt-5">Transaction Details</h4>
            <div class="table-responsive">
              <table class="table table-bordered" id="transactionTable">
                <thead>
                  <tr>
                    <th>No</th>
                    <th>Gift Name</th>
                    <th>Amount</th>
                    <th>Description</th>
                    <th onclick="sortTableByDate()" style="cursor: pointer;">Date &#x25B2;&#x25BC;</th>
                  </tr>
                </thead>
                <tbody>
                  <% transactions.forEach((transaction, index) => { %>
                    <tr>
                      <td><%= (currentPage - 1) * 10 + index + 1 %></td>
                      <td><%= transaction.giftName %></td>
                      <td>Rp. <%= parseFloat(transaction.amount).toFixed(2) %></td>
                      <td><%= transaction.description %></td>
                      <td><%= new Date(transaction.createdAt).toLocaleString() %></td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>

            <!-- Pagination Controls -->
            <nav aria-label="Page navigation" style="padding-top: 40px;">
              <ul class="pagination justify-content-center">
                <% if (currentPage > 1) { %>
                  <li class="page-item">
                    <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                      <span aria-hidden="true">&laquo;</span>
                    </a>
                  </li>
                <% } %>
                <% for (let i = 1; i <= totalPages; i++) { %>
                  <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                    <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                  </li>
                <% } %>
                <% if (currentPage < totalPages) { %>
                  <li class="page-item">
                    <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                      <span aria-hidden="true">&raquo;</span>
                    </a>
                  </li>
                <% } %>
              </ul>
            </nav>
          </div>
        </div>
      </div>

    </div>

    <footer class="footer">
      <div class="d-sm-flex justify-content-center justify-content-sm-between">
        <span class="text-muted text-center text-sm-left d-block d-sm-inline-block">
          Copyright Â© 2024 <a href="https://www.bootstrapdash.com/" target="_blank">Let's Stream</a>. All rights reserved.
        </span>
      </div>
    </footer>
  </div>
</div>
<!-- partial -->
<%- include('../../components/footer.ejs') %>

<script>
  let sortDirection = false;

  function sortTableByDate() {
    const table = document.getElementById('transactionTable');
    const rows = Array.from(table.rows).slice(1); // Skip the header row
    const sortedRows = rows.sort((a, b) => {
      const aDate = new Date(a.cells[4].innerText);
      const bDate = new Date(b.cells[4].innerText);

      return sortDirection ? bDate - aDate : aDate - bDate;
    });

    sortDirection = !sortDirection;

    // Reattach sorted rows
    const tableBody = table.tBodies[0];
    tableBody.innerHTML = '';
    tableBody.append(...sortedRows);
  }

  function filterByDate() {
    const startDateInput = document.getElementById('startDate').value;
    const endDateInput = document.getElementById('endDate').value;
    const pagination = document.querySelector('.pagination'); // Mengambil elemen pagination

    if (startDateInput && endDateInput) {
      const startDate = new Date(startDateInput);
      startDate.setHours(0, 0, 0, 0); // Set start date to 00:00

      const endDate = new Date(endDateInput);
      endDate.setHours(23, 59, 59, 999); // Set end date to 23:59:59

      const table = document.getElementById('transactionTable');
      const rows = Array.from(table.rows).slice(1); // Skip the header row
      let hasVisibleRow = false;

      rows.forEach(row => {
        const dateCell = new Date(row.cells[4].innerText);

        // Display only rows that fall within the selected date range
        if (dateCell >= startDate && dateCell <= endDate) {
          row.style.display = '';
          hasVisibleRow = true; // Jika ada baris yang sesuai dengan filter, tandai true
        } else {
          row.style.display = 'none';
        }
      });

      // Sembunyikan pagination jika ada hasil filter
      if (hasVisibleRow) {
        pagination.style.display = 'none'; // Sembunyikan pagination
      } else {
        pagination.style.display = ''; // Tampilkan kembali pagination jika tidak ada hasil filter
      }
    } else {
      alert('Please select both start and end dates.');
      pagination.style.display = ''; // Tampilkan kembali pagination jika filter dibersihkan
    }
  }

  // Call both filter and sort in the desired order
  function filterAndSort() {
    filterByDate(); // Filter first, then sort the filtered rows
    sortTableByDate(); // Optionally call the sort function after filtering
  }
</script>
