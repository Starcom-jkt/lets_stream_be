<%- include('../../components/header.ejs') %>
      <!-- partial -->
      <div class="container-fluid page-body-wrapper bg-black">
        <!-- partial:partials/_navbar.html -->
        <%- include('../../components/navbar.ejs') %>
        <!-- partial -->
     <%- include('./table.ejs') %>
        <!-- main-panel ends -->
      </div>
      <!-- page-body-wrapper ends -->
<%- include('../../components/footer.ejs') %>

<script>
  function searchTable() {
    const input = document.getElementById("searchInput").value.toUpperCase();
    const table = document.getElementById("transactionTable");
    const tr = table.getElementsByTagName("tr");

    for (let i = 1; i < tr.length; i++) {
      const tdSender = tr[i].getElementsByTagName("td")[1];
      const tdReceiver = tr[i].getElementsByTagName("td")[2];
      const senderText = tdSender.textContent || tdSender.innerText;
      const receiverText = tdReceiver.textContent || tdReceiver.innerText;

      if (senderText.toUpperCase().indexOf(input) > -1 || receiverText.toUpperCase().indexOf(input) > -1) {
        tr[i].style.display = "";
      } else {
        tr[i].style.display = "none";
      }
    }
  }

  function sortTable(columnIndex, isDate = false) {
    const table = document.getElementById("transactionTable");
    const tbody = table.querySelector("tbody");
    let rows = Array.from(tbody.getElementsByTagName("tr"));
    const direction = table.getAttribute('data-sort-direction') || 'asc';

    rows.sort((a, b) => {
      const cellA = a.getElementsByTagName("td")[columnIndex].textContent.trim();
      const cellB = b.getElementsByTagName("td")[columnIndex].textContent.trim();
      let comparison = 0;

      if (isDate) {
        const dateA = new Date(cellA);
        const dateB = new Date(cellB);
        comparison = dateA - dateB;
      } else {
        if (cellA < cellB) comparison = -1;
        if (cellA > cellB) comparison = 1;
      }

      return direction === 'asc' ? comparison : -comparison;
    });

    rows.forEach(row => tbody.appendChild(row));
    table.setAttribute('data-sort-direction', direction === 'asc' ? 'desc' : 'asc');
  }

  document.addEventListener("DOMContentLoaded", () => {
    const headers = document.querySelectorAll("#transactionTable th");
    headers.forEach((header, index) => {
      if (index >= 1 && index <= 6) { // Column indices for sorting
        header.addEventListener("click", () => {
          const isDate = (index === 6); // 6 is date column
          sortTable(index, isDate);
        });
      }
    });

    document.getElementById("searchInput").addEventListener("input", searchTable);
  });
</script>


